name: Terror Zone Alerts

on:
  schedule:
    - cron: "*/5 * * * *"   # run every 5 minutes; script will decide if it's a post window
  workflow_dispatch:
    inputs:
      force_discord:
        description: "Force Discord ping (ignore watchlist, window, and cache)"
        required: false
        type: boolean
      send_all_initials:
        description: "DEMO: Send all 'initial' messages for each watchlist zone"
        required: false
        type: boolean

permissions:
  contents: write

# Avoid overlapping runs if one is delayed by GitHub
concurrency:
  group: tz-alerts
  cancel-in-progress: true

jobs:
  scrape:
    runs-on: ubuntu-latest
    steps:
      - name: Log start time
        run: |
          echo "Runner time (UTC):   $(date -u +'%Y-%m-%dT%H:%M:%SZ')"
          echo "Runner time (local): $(date +'%Y-%m-%dT%H:%M:%S%z')"
          echo "GitHub event: ${{ github.event_name }}"

      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install requests beautifulsoup4

      - name: Run scraper
        env:
          # Secrets/config
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          DISCORD_ROLE_ID: ${{ secrets.DISCORD_ROLE_ID }}

          # Manual run inputs
          FORCE_DISCORD: ${{ github.event.inputs.force_discord }}
          SEND_ALL_INITIALS: ${{ github.event.inputs.send_all_initials }}

          # Gate posting inside the script:
          # Only send when current UTC minute is within WINDOW_MINUTES
          # of one of TARGET_MINUTES (comma-separated).
          TARGET_MINUTES: "5,30,45,55"
          WINDOW_MINUTES: "4"
        run: python scrape_tz.py

      - name: Check if cache changed
        id: cache_check
        run: |
          if git diff --quiet tz_alert_cache.json; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Stage cache file
        if: steps.cache_check.outputs.changed == 'true'
        run: git add tz_alert_cache.json

      - name: Save cache
        if: steps.cache_check.outputs.changed == 'true'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Update TZ alert cache"
          skip_dirty_check: true
